{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "ScheduleEntry",
  "type": "object",
  "properties": {
    "namespace": {
      "type": "string",
      "minLength": 1,
      "maxLength": 50,
      "pattern": "^[a-zA-Z0-9_\\-]+$",
      "description": "Divides schedules into independent collections, allowing for multi-tenancy."
    },
    "timezone": {
      "type": "string",
      "minLength": 1,
      "maxLength": 50,
      "pattern": "^[a-zA-Z0-9_\\-+/]+$",
      "description": "The timezone in which the schedule is defined."
    },
    "cron": {
      "type": "string",
      "minLength": 9,
      "maxLength": 100,
      "pattern": "^[a-zA-Z0-9_*\\-,/ ]+$",
      "description": "The cron expression for recurring schedules."
    },
    "runAt": {
      "type": "string",
      "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}$",
      "description": "Specifies when the schedule will execute in 'YYYY-MM-DDTHH:MM' format."
    },
    "scheduleType": {
      "type": "string",
      "enum": ["CRON", "ONCE"],
      "description": "The type of the schedule."
    },
    "resourceId": {
      "type": "string",
      "minLength": 1,
      "maxLength": 100,
      "pattern": "^[a-zA-Z0-9_\\-]+$",
      "description": "The high cardinality identifier for a schedule, such as a user or device ID."
    },
    "scheduleName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 100,
      "pattern": "^[a-zA-Z0-9_\\- ]+$",
      "description": "The low cardinality identifier that belongs to a resourceId."
    },
    "payload": {
      "type": "object",
      "description": "The JSON payload for the schedule."
    }
  },
  "required": [
    "namespace",
    "timezone",
    "scheduleType",
    "resourceId",
    "scheduleName",
    "payload"
  ],
  "additionalProperties": false,
  "allOf": [
    {
      "if": {
        "properties": { "scheduleType": { "const": "CRON" } }
      },
      "then": {
        "required": ["cron"],
        "not": { "required": ["runAt"] }
      }
    },
    {
      "if": {
        "properties": { "scheduleType": { "const": "ONCE" } }
      },
      "then": {
        "required": ["runAt"],
        "not": { "required": ["cron"] }
      }
    }
  ]
}
